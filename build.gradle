plugins {
    id 'java'
    id 'io.qameta.allure' version '2.10.0'
}

repositories {
    mavenCentral()
}

def allureVersion = "2.19.0",
    slf4jVersion = '2.0.3'

allure {
    report {
        version.set(allureVersion)
    }
    adapter { // отвечает за появление папочки build/allure-results
        aspectjWeaver.set(true) //обработка аннотации @Step
        frameworks {
            junit5 { //название фреймворка
                adapterVersion.set(allureVersion) //версия интеграции фреймворка и Allure
            }
        }
    }
}

dependencies {
    testImplementation(
            'com.codeborne:selenide:6.9.0',
            "io.qameta.allure:allure-selenide:$allureVersion",
            "org.junit.jupiter:junit-jupiter:5.9.0",
            'io.github.bonigarcia:webdrivermanager:5.3.0',
            "org.slf4j:slf4j-simple:$slf4jVersion"
    )
}

tasks.withType(Test) {
    systemProperties(System.getProperties())
    useJUnitPlatform()

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

task one_property(type: Test){
    useJUnitPlatform {
        includeTags "one_property_test"
    }
}

task many_property(type: Test){
    useJUnitPlatform {
        includeTags "many_property_test"
    }
}
task hello(type: Test){
    useJUnitPlatform {
        includeTags "hello"
    }
}

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'